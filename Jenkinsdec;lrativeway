pipeline{

agent any

tools{
maven 'maven3.8.6'
}

options {
  timestamps()
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))
}

triggers {
  pollSCM('* * * * *')
//cron('* * * * *')
}

//This stage will get the source from the Github
stages{
stage('CheckOutcode'){
steps{
   slackNotifications('STARTED')
git branch: 'Development', credentialsId: '4744455b-6ae3-4cd5-b676-dd6517c2ede9', url: 'https://github.com/shrinivas3/maven-web-application.git'
}
}
//this stage will do the build
stage('Build'){
steps{
sh "mvn clean package"
}
}
//this stage will be executed sonaqube report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}
//this stage will upload the artifcats into nexu repo
stage('UploadArtifactIntoArtifactoryRepo'){
steps{
sh "mvn clean package"
}
}
//deploy application into tomcat server
stage('Deploytomcat server')
{
steps{
sshagent(['71148a7d-cfa0-4278-bc1a-d1642c60caef']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.45.106:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}

    
}//stages closing

post {
  success {
    slackNotifications(currentBuild.result)
  }
  failure {
    slackNotifications(currentBuild.result)
  }
}

}//pipeline closing

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
